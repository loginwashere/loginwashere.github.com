---
layout: post
title: "Moving server to Virtual box"
date: 2011-12-28 00:15
published: false
comments: true
categories:
- ubuntu
- VirtualBox
---
{% img http://placekitten.com/890/280 %}

При разработке на PHP уже привык для любого, даже мелкого проекта заводить виртуальный хост.
Учитывая то, что разработка ведется в Ubuntu, создание нового виртуального хоста для проета происходит довольно быстро.
``` bash
# Создаем публичную папку проекта
mkdir /home/%username%/vhosts/%sitename%

# Создаем файл который будет содержать описание виртуального хоста
#
# В Ubuntu описание виртуальных хостов удобно хранить
# в папке /etc/apache2/sites-available/
# по виртуальному хосту в файле
sudo vi /etc/apache2/sites-available/%sitename%

# ВНИМАНИЕ:
# Если вам по каким-либо причинам не нравиться vi
# файл можно создать и редактировать любыми доступными средствами
#
# Если вы случайно запустили vi и не знаете как выйти - наберите :q и нажмите <Enter>
# В открывшемся редакторе необходимо добавить запись описывающую виртуальный хост. Например так:
<VirtualHost *:80>
    ServerName %sitename%
    ServerAlias %sitename%
    DocumentRoot /home/lwh/vhosts/%sitename%
</VirtualHost&gt

# (Вместо создания можно скопировать файл по умолчанию и отредактировать его)
# sudo cp /etc/apache2/sites-avalable/default /etc/apache2/sites-available/%sitename%

# "Включаем сайт"
# Создается ссылка /etc/apache2/sites-enabled/%sitename%
# на ранее созданный /etc/apache2/sites-available/%sitename%
sudo a2ensite %sitename%

# Перезапускаем apache чтобы измения вступили в силу
sudo service apache reload

# В открывшемся редакторе необходимо добавить запись вида
# 127.0.0.1 %sitename%
sudo vi /etc/hosts
```
Всего пять комманд и к сайту можно обратиться по адресу http://%sitename%.
Как же упростить этот процесс?
<!-- more -->
Вроде бы ничего сложного, но когда создаешь н-адцатый проект, начинаешь задумываться об автоматизации и еще большем
упрощении процедуры. Можно создать скрипт, который сведет все к запуску скрипта и вводу названия проекта,
дополнительный параметров.

Кому-то это решение покажется достаточным, но я искал путь с еще меньшим количеством телодвижений.
При этом хотелось разделить сервер и рабочую машину и иметь возможность работать над проектами как из Ubuntu так и из Windows.
Так как компьютер у меня один, то для отделния сервера решил использовать Virtual Box.
Установив на виртуальную машину Ubuntu Server столкнулся с задачей доступа к виртуальным хостам виртуальной машины.
При поиске решения наткнулся на замечательную программу dnsmasq – простой в использовании и настройкt DNS и DHCP сервер.
Следует отметить, что сеть на виртуально машине у меня настроена так: NAT (Network Address Translation) для
доступа в интернет для всяких обновлений и установок новых пакетов (При этом подключении нет доступа из хоста к гостю)
и виртуальный адаптер хоста (Host-only Adapter) для обеспечения связи между хостом и гостем.
Для настройки сети сос стороны хоста я только отметил нужные пункты в настройках сети Virtual Box.
Затем, при запустке виртуальной машины на хосте создался адаптер с названием vboxnet0 в Ubuntu и
VirtualBox Host-Only Network в Windows. Это довольно неприятная особенность Virtual Box мешает легкому
использованию одной виртуальной машины на разных хостах если одним из адаперов является виртуальный адаптер хоста.
Также отличается ip адрес этого адаптера по умолчанию (В Windows назначается 192.168.137.1, в то время как в Ubuntu 192.168.56.1). С чем связаны эти различия я не знаю, но нужно иметь их ввиду.
Для хоста я выбрал ip 192.168.137.1, для гостя – 192.168.137.3.

На госте NAT адаптер получает настройки сети автоматически и работает сразу из каробки.
Добавить адаптер для виртуального адаптера хоста на гость можно добавив настройки в файл /etc/network/interfaces
```
# eth0 - дефолтный интерфейс, используется для NAT
# поэтому для этого интерфейса выбрал название eth1
# Если у вас уже присутствует такой интерфейс - выберите другое название.
auto eth1
iface eth1 inet static
# ip адрес гостя
address 192.168.137.3
# ip адрес хоста
gateway 192.168.137.1
netmask 255.255.255.0
```
Если хотите применить введенные выше настройки необходимо запустить команду
```
sudo /etc/init.d/networking restart
```
Устанавливаем на виртуальную машину dnsmasq
```
sudo apt-get install dnsmasq
```
и получаем DNS сервер, который будет обрабатывать запросы к виртуальной машине и отдавать виртуальные хосты.
По этой ссылке можно посмотреть настройки программы, их описание и некоторые примеры.

Из них нас в первыю очередь интересуют.
```
# ip адрес - это ip адрес гостя
# Первый параметр посылает все запросы к *.site.local на 192.168.137.3
address=/site.local/192.168.137.3
# Второй - определяет запросы на какой адрес будет слушать DNS сервер
listen-address=192.168.137.3
```
Их нужно раскомментировать и заменить ip адрес на адрес виртуальной машины(192.168.137.3), и выбрать название для домена,
на котором у вас будут находиться локальные проекты(site.local).
Чтобы воспользоваться DNS сервером необходимо проинформировать о его существовании виртуальную машину.
Для этого на госте откроем файл
```
sudo vi /etc/resolv.conf
```
и добавим запись о сервере
```
# Эту строчку следует разместить в самом начале файла
nameserver 192.168.137.3
```
Также нужно добавить запись о новом DNS сервере на хосте
Теперь возмемся за apache. Для облегчения создания виртуальных хостов воспользуемся его модулем mod_vhost_alias.
Этот модуль позволит создавать виртуальный хост простым созданием директории. Включить его можно следующей командой
```
sudo a2enmod vhost_alias
```
Создадим виртуальный хост, поддоменами которого будут наши проекты.
```
sudo vi /etc/apache2/sites-available/site.local
# В этот файл добавим примерно следующее
<VirtualHost *:80>
    ServerName site.local
    ServerAlias *.site.local
    VirtualDocumentRoot /home/%username%/vhosts/%1
</VirtualHost&gt
# Не забываем перезапустить apache чтобы измения вступили в силу
sudo service apache reload
```
Теперь проверим – все ли работает
```
mkdir /home/%username%/vhosts/test
echo <h1>Hello Virtual Host</h1> > /home/%username%/vhosts/test/index.php
```
Теперь если в браузере обратиться по адресу http://test.site.local можно увидеть надпись Hello Virtual Host. Если это так – можно вздохнуть с облегчением – все прошло успешно.

Литература

    * Описание настроек dnsmasq(на английском)
    * Мультидоменность в Apache без лишних хлопот на локальном хосте
    * http://httpd.apache.org/docs/2.0/mod/mod_vhost_alias.html