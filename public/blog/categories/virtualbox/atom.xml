<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: VirtualBox | Dmitriy Savchenko]]></title>
  <link href="http://loginwashere.github.com/blog/categories/virtualbox/atom.xml" rel="self"/>
  <link href="http://loginwashere.github.com/"/>
  <updated>2012-01-08T00:05:25+02:00</updated>
  <id>http://loginwashere.github.com/</id>
  <author>
    <name><![CDATA[Dmitriy Savchenko]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[VirtualBox guest additions reinstall]]></title>
    <link href="http://loginwashere.github.com/blog/2012/01/07/virtualbox-guest-additions-reinstall/"/>
    <updated>2012-01-07T22:47:00+02:00</updated>
    <id>http://loginwashere.github.com/blog/2012/01/07/virtualbox-guest-additions-reinstall</id>
    <content type="html"><![CDATA[<p><img src="http://i.imgur.com/GubLdl.jpg"></p>

<p>Software development obviously needs some environment. After some time spent working as developer i've got strong filling,
that this envirement should be separated from my desktop. At least vitrually.</p>

<p>So i am working with server inside VirtalBox. It's preaty hendy solution, but lack of exirience can couse some troubles.</p>

<p>For example i have computer with Windows7/Ubuntu 11.10 in dual boot and i really would like to work with
the same virtual mashine from each of the two operating systems. At the time of this writing i didn't manage to achieve
this useful functionality, so i keep using Windows more heavily than i want (Thanks Skyrim, shame on me).</p>

<p>Just today i tryed to use ubuntu server virtual mashine, configured to use with windows and encoutered some problems.</p>

<p>So handy advise if you want to use virtual mashine in different operating systes:</p>

<ol>
<li><p>Don't forget to remove VBoxAdditions disk after additions intallation.
Paths in ubuntu and windows to that disk are equally not acceptable.</p></li>
<li><p>If you, like me, use two adapters to connect virtual mashine to internet (NAT) and to host (Hast only Network) you
probably would be surprized to know, VirtualBox have different names for second one in linux and windows. And, yes,
these names are incompatible too. So after OS chnge you shold go to VM settings and open window with Host only netwoerk
settings. After that name will be change to propper for current OS. (Why have they done this?)</p></li>
</ol>


<p>After that if you have network properly set up - you shouldn't fill any differece. All work like clock.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Moving server to Virtual box or wildcard virtual domains]]></title>
    <link href="http://loginwashere.github.com/blog/2012/01/01/moving-server-to-virtual-box/"/>
    <updated>2012-01-01T00:15:00+02:00</updated>
    <id>http://loginwashere.github.com/blog/2012/01/01/moving-server-to-virtual-box</id>
    <content type="html"><![CDATA[<p><img src="http://i.imgur.com/nAByQ.png"></p>

<p>Currently i work with LAMP stack and therefore i'm used to creating virtual hosts for all projects, even small ones.
Assuming that development is going on Ubuntu, Virtual Host creation is quite quick and easy operation.</p>

<!-- more -->


<p>``` bash</p>

<h1>Create project public folder</h1>

<p>mkdir /home/%username%/vhosts/%sitename%</p>

<h1>Create file, that will be containing virtual Host description</h1>

<p>#</p>

<h1>In Ubuntu Virtual Host descriptions are stored in folder</h1>

<h1>/etc/apache2/sites-available/ one host per file</h1>

<p>sudo vi /etc/apache2/sites-available/%sitename%
```
ATTENTION:
If you don't like vi, vim or whatever
you can create and edit file with any editor you like.</p>

<p>If you started vi and don't know how to exit press <Esc> and then type :q and press <Enter>
```</p>

<h1>Add record describing Virtual Host</h1>

<p><VirtualHost *:80></p>

<pre><code>ServerName %sitename%
ServerAlias %sitename%
DocumentRoot /home/lwh/vhosts/%sitename%
</code></pre>

<p>&lt;/VirtualHost&amp;gt</p>

<h1>(Instead of creating you can copy default file and then edit it)</h1>

<h1>sudo cp /etc/apache2/sites-avalable/default /etc/apache2/sites-available/%sitename%</h1>

<h1>"Enabling site"</h1>

<h1>Create link from /etc/apache2/sites-available/%sitename%</h1>

<h1>to /etc/apache2/sites-enabled/%sitename%</h1>

<p>sudo a2ensite %sitename%</p>

<h1>To apply changes reload or reboot apache with a command</h1>

<p>sudo service apache reload</p>

<h1>Add sitename ofyoursite to hosts file</h1>

<h1>127.0.0.1 %sitename%</h1>

<p>sudo vi /etc/hosts
```
Just five commands and you can access site on http://%sitename%.
But this proccess can be simplified.</p>

<p>Вроде бы ничего сложного, но когда создаешь н-адцатый проект, начинаешь задумываться об автоматизации и еще большем
упрощении процедуры. Можно создать скрипт, который сведет все к запуску скрипта и вводу названия проекта,
дополнительный параметров.</p>

<p>Кому-то это решение покажется достаточным, но я искал путь с еще меньшим количеством телодвижений.
При этом хотелось разделить сервер и рабочую машину и иметь возможность работать над проектами как из Ubuntu так и из Windows.
Так как компьютер у меня один, то для отделния сервера решил использовать Virtual Box.
Установив на виртуальную машину Ubuntu Server столкнулся с задачей доступа к виртуальным хостам виртуальной машины.
При поиске решения наткнулся на замечательную программу dnsmasq – простой в использовании и настройкt DNS и DHCP сервер.</p>

<p>Следует отметить, что сеть на виртуально машине у меня настроена так: NAT (Network Address Translation) для
доступа в интернет для всяких обновлений и установок новых пакетов (При этом подключении нет доступа из хоста к гостю)
и виртуальный адаптер хоста (Host-only Adapter) для обеспечения связи между хостом и гостем.
Для настройки сети сос стороны хоста я только отметил нужные пункты в настройках сети Virtual Box.
Затем, при запустке виртуальной машины на хосте создался адаптер с названием vboxnet0 в Ubuntu и
VirtualBox Host-Only Network в Windows. Это довольно неприятная особенность Virtual Box мешает легкому
использованию одной виртуальной машины на разных хостах если одним из адаперов является виртуальный адаптер хоста.
Также отличается ip адрес этого адаптера по умолчанию (В Windows назначается 192.168.137.1, в то время как в Ubuntu 192.168.56.1).
С чем связаны эти различия я не знаю, но нужно иметь их ввиду.
Для хоста я выбрал ip 192.168.137.1, для гостя – 192.168.137.3.</p>

<p>На госте NAT адаптер получает настройки сети автоматически и работает сразу из каробки.
Добавить адаптер для виртуального адаптера хоста на гость можно добавив настройки в файл /etc/network/interfaces
```</p>

<h1>eth0 - default unterface, used for NAT</h1>

<h1>therefore for new interface i choose name eth1</h1>

<h1>If you already have interface with that name - choose another name.</h1>

<p>auto eth1
iface eth1 inet static</p>

<h1>guest ip</h1>

<p>address 192.168.137.3</p>

<h1>host ip</h1>

<p>gateway 192.168.137.1
netmask 255.255.255.0
<code>
If you want apply these settings you need to execute command
</code>
sudo /etc/init.d/networking restart
<code>
Install dnsmasq on virtual mashine
</code>
sudo apt-get install dnsmasq
```
и получаем DNS сервер, который будет обрабатывать запросы к виртуальной машине и отдавать виртуальные хосты.
По этой ссылке можно посмотреть настройки программы, их описание и некоторые примеры.</p>

<p>Among them we are interested in next settings:
```</p>

<h1>ip адрес - это ip адрес гостя</h1>

<h1>Первый параметр посылает все запросы к *.site.local на 192.168.137.3</h1>

<p>address=/site.local/192.168.137.3</p>

<h1>Второй - определяет запросы на какой адрес будет слушать DNS сервер</h1>

<p>listen-address=192.168.137.3
```
Их нужно раскомментировать и заменить ip адрес на адрес виртуальной машины(192.168.137.3), и выбрать название для домена,
на котором у вас будут находиться локальные проекты(site.local).</p>

<p>Чтобы воспользоваться DNS сервером необходимо проинформировать о его существовании виртуальную машину.
Для этого на госте откроем файл
Open file on guest mashine
<code>
sudo vi /etc/resolv.conf
</code>
and add record about server
```</p>

<h1>This line should be placed in the beggining of file.</h1>

<p>nameserver 192.168.137.3
```
Also you need to add new DNS server record on host</p>

<p>Теперь возмемся за apache. Для облегчения создания виртуальных хостов воспользуемся его модулем mod_vhost_alias.
Этот модуль позволит создавать виртуальный хост простым созданием директории. Включить его можно следующей командой
<code>
sudo a2enmod vhost_alias
</code>
Create Virtual Host. Your projects will be accessible on it's subdomains.
```
sudo vi /etc/apache2/sites-available/site.local</p>

<h1>Add next lines to this file</h1>

<p><VirtualHost *:80></p>

<pre><code>ServerName site.local
ServerAlias *.site.local
VirtualDocumentRoot /home/%username%/vhosts/%1
</code></pre>

<p>&lt;/VirtualHost&amp;gt</p>

<h1>Do not forget to reload or restsrt apache</h1>

<p>sudo service apache reload
<code>
Lets check if everything works.
</code>
mkdir /home/%username%/vhosts/test
echo <h1>Hello Virtual Host</h1> > /home/%username%/vhosts/test/index.php
```
Now you can open in browser page http://test.site.local and see text: "Hello Virtual Host".
Congratulations - you've made your life a bit easier.</p>

<p>Links</p>

<pre><code>* dnsmasq settings explained
* Мультидоменность в Apache без лишних хлопот на локальном хосте
* http://httpd.apache.org/docs/2.0/mod/mod_vhost_alias.html
</code></pre>
]]></content>
  </entry>
  
</feed>
